buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
    }
}

wrapper {
    distributionUrl = "${gradleWrapperUrl}"
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group "${group}"
version "${version}"
description "${description}"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Java :: Employee Info MicroService :: SonarQube Scanner for Gradle"
        property "sonar.projectKey", "org.sonarqube:employee-info-microservice"
        property "sonar.exclusions", "${project.buildDir}/classes/java/main"
        property "sonar.sources", "src/main"
        property "sonar.tests", "src/test"
        property "sonar.login", "admin"
        property "sonar.password", "testadmin"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.h2database:h2:1.4.200'

    // Spock framework configuration
    testCompile("org.spockframework:spock-core:${spockFrameWorkVersion}")
    testCompile("org.spockframework:spock-spring:${spockFrameWorkVersion}")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacoco {
    toolVersion = "${jaccocoVersion}"
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/jacocoTestReport.xml")
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                minimum = 0.8
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

sourceSets {
    test {
        java { srcDirs = ['src/test/unit/java'] }
        groovy { srcDirs = ['src/test/unit/groovy', 'src/test/layer/groovy'] }

    }
}

test {
    finalizedBy jacocoTestReport, jacocoTestCoverageVerification
    systemProperty 'spring.profiles.active', 'test'
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")

    }
}

//tasks['sonarqube'].dependsOn test
